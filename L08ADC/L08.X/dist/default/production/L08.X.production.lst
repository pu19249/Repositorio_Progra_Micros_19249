

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Apr 20 12:14:46 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    24                           	dabs	1,0x7E,2
    25  0000                     
    26                           ; Version 2.20
    27                           ; Generated 12/02/2020 GMT
    28                           ; 
    29                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F887 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  000E                     	;# 
    76  000F                     	;# 
    77  0010                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0014                     	;# 
    82  0015                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001B                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001D                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  0081                     	;# 
    96  0085                     	;# 
    97  0086                     	;# 
    98  0087                     	;# 
    99  0088                     	;# 
   100  0089                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  008F                     	;# 
   105  0090                     	;# 
   106  0091                     	;# 
   107  0092                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0097                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  0105                     	;# 
   124  0107                     	;# 
   125  0108                     	;# 
   126  0109                     	;# 
   127  010C                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  0185                     	;# 
   133  0187                     	;# 
   134  0188                     	;# 
   135  0189                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  0000                     	;# 
   139  0001                     	;# 
   140  0002                     	;# 
   141  0003                     	;# 
   142  0004                     	;# 
   143  0005                     	;# 
   144  0006                     	;# 
   145  0007                     	;# 
   146  0008                     	;# 
   147  0009                     	;# 
   148  000A                     	;# 
   149  000B                     	;# 
   150  000C                     	;# 
   151  000D                     	;# 
   152  000E                     	;# 
   153  000E                     	;# 
   154  000F                     	;# 
   155  0010                     	;# 
   156  0011                     	;# 
   157  0012                     	;# 
   158  0013                     	;# 
   159  0014                     	;# 
   160  0015                     	;# 
   161  0015                     	;# 
   162  0016                     	;# 
   163  0017                     	;# 
   164  0018                     	;# 
   165  0019                     	;# 
   166  001A                     	;# 
   167  001B                     	;# 
   168  001B                     	;# 
   169  001C                     	;# 
   170  001D                     	;# 
   171  001E                     	;# 
   172  001F                     	;# 
   173  0081                     	;# 
   174  0085                     	;# 
   175  0086                     	;# 
   176  0087                     	;# 
   177  0088                     	;# 
   178  0089                     	;# 
   179  008C                     	;# 
   180  008D                     	;# 
   181  008E                     	;# 
   182  008F                     	;# 
   183  0090                     	;# 
   184  0091                     	;# 
   185  0092                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0094                     	;# 
   190  0095                     	;# 
   191  0096                     	;# 
   192  0097                     	;# 
   193  0098                     	;# 
   194  0099                     	;# 
   195  009A                     	;# 
   196  009B                     	;# 
   197  009C                     	;# 
   198  009D                     	;# 
   199  009E                     	;# 
   200  009F                     	;# 
   201  0105                     	;# 
   202  0107                     	;# 
   203  0108                     	;# 
   204  0109                     	;# 
   205  010C                     	;# 
   206  010C                     	;# 
   207  010D                     	;# 
   208  010E                     	;# 
   209  010F                     	;# 
   210  0185                     	;# 
   211  0187                     	;# 
   212  0188                     	;# 
   213  0189                     	;# 
   214  018C                     	;# 
   215  018D                     	;# 
   216                           
   217                           	psect	idataBANK0
   218  0214                     __pidataBANK0:
   219                           
   220                           ;initializer for _tabla_7seg
   221  0214  343F               	retlw	63
   222  0215  3406               	retlw	6
   223  0216  345B               	retlw	91
   224  0217  344F               	retlw	79
   225  0218  3466               	retlw	102
   226  0219  346D               	retlw	109
   227  021A  347D               	retlw	125
   228  021B  3407               	retlw	7
   229  021C  347F               	retlw	127
   230  021D  346F               	retlw	111
   231  021E  3477               	retlw	119
   232  021F  347C               	retlw	124
   233  0220  3439               	retlw	57
   234  0221  345E               	retlw	94
   235  0222  3479               	retlw	121
   236  0223  3471               	retlw	113
   237  0009                     _PORTEbits	set	9
   238  0009                     _PORTE	set	9
   239  0008                     _PORTD	set	8
   240  000C                     _PIR1bits	set	12
   241  000B                     _INTCONbits	set	11
   242  0001                     _TMR0	set	1
   243  001E                     _ADRESH	set	30
   244  0007                     _PORTC	set	7
   245  001F                     _ADCON0bits	set	31
   246  005A                     _T0IF	set	90
   247  0066                     _ADIF	set	102
   248  009F                     _ADCON1bits	set	159
   249  008C                     _PIE1bits	set	140
   250  0081                     _OPTION_REGbits	set	129
   251  008F                     _OSCCONbits	set	143
   252  0089                     _TRISE	set	137
   253  0088                     _TRISD	set	136
   254  0087                     _TRISC	set	135
   255  0085                     _TRISAbits	set	133
   256  0189                     _ANSELH	set	393
   257  0188                     _ANSELbits	set	392
   258                           
   259                           	psect	cinit
   260  0011                     start_initialization:	
   261                           ; #config settings
   262                           
   263  0011                     __initialization:
   264                           
   265                           ; Initialize objects allocated to BANK0
   266  0011  1383               	bcf	3,7	;select IRP bank0
   267  0012  3030               	movlw	low (__pdataBANK0+16)
   268  0013  00FD               	movwf	btemp+-1
   269  0014  3002               	movlw	high __pidataBANK0
   270  0015  00FE               	movwf	btemp
   271  0016  3014               	movlw	low __pidataBANK0
   272  0017  00FF               	movwf	btemp+1
   273  0018  3020               	movlw	low __pdataBANK0
   274  0019  0084               	movwf	4
   275  001A  120A  118A  2205  120A  118A  	fcall	init_ram0
   276                           
   277                           ; Clear objects allocated to BANK0
   278  001F  01BD               	clrf	__pbssBANK0& (0+127)
   279  0020  01BE               	clrf	(__pbssBANK0+1)& (0+127)
   280  0021  01BF               	clrf	(__pbssBANK0+2)& (0+127)
   281                           
   282                           ; Clear objects allocated to COMMON
   283  0022  01F0               	clrf	__pbssCOMMON& (0+127)
   284  0023  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   285  0024  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   286  0025  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   287  0026  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   288  0027                     end_of_initialization:	
   289                           ;End of C runtime variable initialization code
   290                           
   291  0027                     __end_of__initialization:
   292  0027  0183               	clrf	3
   293  0028  120A  118A  29AB   	ljmp	_main	;jump to C main() function
   294                           
   295                           	psect	bssCOMMON
   296  0070                     __pbssCOMMON:
   297  0070                     _residuo:
   298  0070                     	ds	1
   299  0071                     _transistores:
   300  0071                     	ds	1
   301  0072                     _decenas:
   302  0072                     	ds	1
   303  0073                     _centenas:
   304  0073                     	ds	1
   305  0074                     _dividendo:
   306  0074                     	ds	1
   307                           
   308                           	psect	bssBANK0
   309  003D                     __pbssBANK0:
   310  003D                     _contador:
   311  003D                     	ds	1
   312  003E                     _temporal:
   313  003E                     	ds	1
   314  003F                     _unidades:
   315  003F                     	ds	1
   316                           
   317                           	psect	dataBANK0
   318  0020                     __pdataBANK0:
   319  0020                     _tabla_7seg:
   320  0020                     	ds	16
   321                           
   322                           	psect	inittext
   323  0201                     init_fetch0:	
   324                           ;	Called with low address in FSR and high address in W
   325                           
   326  0201  087E               	movf	btemp,w
   327  0202  008A               	movwf	10
   328  0203  087F               	movf	btemp+1,w
   329  0204  0082               	movwf	2
   330  0205                     init_ram0:	
   331                           ;Called with:
   332                           ;	high address of idata address in btemp 
   333                           ;	low address of idata address in btemp+1 
   334                           ;	low address of data in FSR
   335                           ;	high address + 1 of data in btemp-1
   336                           
   337  0205  120A  118A  2201  120A  118A  	fcall	init_fetch0
   338  020A  0080               	movwf	0
   339  020B  0A84               	incf	4,f
   340  020C  0804               	movf	4,w
   341  020D  067D               	xorwf	btemp+-1,w
   342  020E  1903               	btfsc	3,2
   343  020F  3400               	retlw	0
   344  0210  0AFF               	incf	btemp+1,f
   345  0211  1903               	btfsc	3,2
   346  0212  0AFE               	incf	btemp,f
   347  0213  2A05               	goto	init_ram0
   348                           
   349                           	psect	cstackCOMMON
   350  0075                     __pcstackCOMMON:
   351  0075                     ?_multiplexado:
   352  0075                     ?_setup:	
   353                           ; 1 bytes @ 0x0
   354                           
   355  0075                     ?_division:	
   356                           ; 1 bytes @ 0x0
   357                           
   358  0075                     ?_display1:	
   359                           ; 1 bytes @ 0x0
   360                           
   361  0075                     ??_display1:	
   362                           ; 1 bytes @ 0x0
   363                           
   364  0075                     ?_display2:	
   365                           ; 1 bytes @ 0x0
   366                           
   367  0075                     ??_display2:	
   368                           ; 1 bytes @ 0x0
   369                           
   370  0075                     ?_display3:	
   371                           ; 1 bytes @ 0x0
   372                           
   373  0075                     ??_display3:	
   374                           ; 1 bytes @ 0x0
   375                           
   376  0075                     ?_isr:	
   377                           ; 1 bytes @ 0x0
   378                           
   379  0075                     ?_main:	
   380                           ; 1 bytes @ 0x0
   381                           
   382                           
   383                           ; 1 bytes @ 0x0
   384  0075                     	ds	1
   385  0076                     ??_multiplexado:
   386  0076                     ??_isr:	
   387                           ; 1 bytes @ 0x1
   388                           
   389                           
   390                           ; 1 bytes @ 0x1
   391  0076                     	ds	4
   392                           
   393                           	psect	cstackBANK0
   394  0030                     __pcstackBANK0:
   395  0030                     ??_setup:
   396  0030                     ?___awdiv:	
   397                           ; 1 bytes @ 0x0
   398                           
   399  0030                     ?___awmod:	
   400                           ; 2 bytes @ 0x0
   401                           
   402  0030                     ___awdiv@divisor:	
   403                           ; 2 bytes @ 0x0
   404                           
   405  0030                     ___awmod@divisor:	
   406                           ; 2 bytes @ 0x0
   407                           
   408                           
   409                           ; 2 bytes @ 0x0
   410  0030                     	ds	2
   411  0032                     ___awdiv@dividend:
   412  0032                     ___awmod@dividend:	
   413                           ; 2 bytes @ 0x2
   414                           
   415                           
   416                           ; 2 bytes @ 0x2
   417  0032                     	ds	2
   418  0034                     ??___awdiv:
   419  0034                     ??___awmod:	
   420                           ; 1 bytes @ 0x4
   421                           
   422                           
   423                           ; 1 bytes @ 0x4
   424  0034                     	ds	1
   425  0035                     ___awdiv@counter:
   426  0035                     ___awmod@counter:	
   427                           ; 1 bytes @ 0x5
   428                           
   429                           
   430                           ; 1 bytes @ 0x5
   431  0035                     	ds	1
   432  0036                     ___awdiv@sign:
   433  0036                     ___awmod@sign:	
   434                           ; 1 bytes @ 0x6
   435                           
   436                           
   437                           ; 1 bytes @ 0x6
   438  0036                     	ds	1
   439  0037                     ___awdiv@quotient:
   440                           
   441                           ; 2 bytes @ 0x7
   442  0037                     	ds	2
   443  0039                     ??_division:
   444                           
   445                           ; 1 bytes @ 0x9
   446  0039                     	ds	3
   447  003C                     ??_main:
   448                           
   449                           ; 1 bytes @ 0xC
   450  003C                     	ds	1
   451                           
   452                           	psect	maintext
   453  01AB                     __pmaintext:	
   454 ;;
   455 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   456 ;;
   457 ;; *************** function _main *****************
   458 ;; Defined at:
   459 ;;		line 90 in file "mainL08.c"
   460 ;; Parameters:    Size  Location     Type
   461 ;;		None
   462 ;; Auto vars:     Size  Location     Type
   463 ;;		None
   464 ;; Return value:  Size  Location     Type
   465 ;;                  1    wreg      void 
   466 ;; Registers used:
   467 ;;		wreg, status,2, status,0, pclath, cstack
   468 ;; Tracked objects:
   469 ;;		On entry : B00/0
   470 ;;		On exit  : 0/0
   471 ;;		Unchanged: 0/0
   472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   473 ;;      Params:         0       0       0       0       0
   474 ;;      Locals:         0       0       0       0       0
   475 ;;      Temps:          0       1       0       0       0
   476 ;;      Totals:         0       1       0       0       0
   477 ;;Total ram usage:        1 bytes
   478 ;; Hardware stack levels required when called:    5
   479 ;; This function calls:
   480 ;;		_division
   481 ;;		_setup
   482 ;; This function is called by:
   483 ;;		Startup code after reset
   484 ;; This function uses a non-reentrant model
   485 ;;
   486                           
   487                           
   488                           ;psect for function _main
   489  01AB                     _main:
   490  01AB                     l1233:	
   491                           ;incstack = 0
   492                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   493                           
   494                           
   495                           ;mainL08.c: 91:     TMR0 = 255;
   496  01AB  120A  118A  214A  120A  118A  	fcall	_setup
   497  01B0                     l1235:
   498                           
   499                           ;mainL08.c: 92: 
   500  01B0  1283               	bcf	3,5	;RP0=0, select bank0
   501  01B1  1303               	bcf	3,6	;RP1=0, select bank0
   502  01B2  149F               	bsf	31,1	;volatile
   503  01B3                     l1237:
   504                           
   505                           ;mainL08.c: 94:     PIR1bits.ADIF = 0;
   506  01B3  1283               	bcf	3,5	;RP0=0, select bank0
   507  01B4  1303               	bcf	3,6	;RP1=0, select bank0
   508  01B5  189F               	btfsc	31,1	;volatile
   509  01B6  29B8               	goto	u741
   510  01B7  29B9               	goto	u740
   511  01B8                     u741:
   512  01B8  29CE               	goto	l1249
   513  01B9                     u740:
   514  01B9                     l1239:
   515                           
   516                           ;mainL08.c: 95:     INTCONbits.GIE = 1;
   517  01B9  0C1F               	rrf	31,w	;volatile
   518  01BA  00BC               	movwf	??_main
   519  01BB  0C3C               	rrf	??_main,w
   520  01BC  390F               	andlw	15
   521  01BD  3A01               	xorlw	1
   522  01BE  1D03               	skipz
   523  01BF  29C1               	goto	u751
   524  01C0  29C2               	goto	u750
   525  01C1                     u751:
   526  01C1  29C5               	goto	l1243
   527  01C2                     u750:
   528  01C2                     l1241:
   529                           
   530                           ;mainL08.c: 96:     INTCONbits.T0IE = 1;
   531  01C2  30C3               	movlw	-61
   532  01C3  059F               	andwf	31,f	;volatile
   533                           
   534                           ;mainL08.c: 97:     INTCONbits.T0IF = 0;
   535  01C4  29C9               	goto	l1245
   536  01C5                     l1243:
   537                           
   538                           ;mainL08.c: 99: 
   539  01C5  081F               	movf	31,w	;volatile
   540  01C6  39C3               	andlw	-61
   541  01C7  3804               	iorlw	4
   542  01C8  009F               	movwf	31	;volatile
   543  01C9                     l1245:
   544                           
   545                           ;mainL08.c: 101:     ADCON0bits.ADCS1 = 1;
   546  01C9  29CA               	nop2	;2 cycle nop
   547  01CA  0000               	nop
   548  01CB                     l1247:
   549                           
   550                           ;mainL08.c: 102:     ADCON0bits.ADON = 1;
   551  01CB  1283               	bcf	3,5	;RP0=0, select bank0
   552  01CC  1303               	bcf	3,6	;RP1=0, select bank0
   553  01CD  149F               	bsf	31,1	;volatile
   554  01CE                     l1249:
   555                           
   556                           ;mainL08.c: 104:     ADCON1bits.VCFG1 = 0;
   557  01CE  120A  118A  2094  120A  118A  	fcall	_division
   558  01D3  29B3               	goto	l1237
   559  01D4  120A  118A  280E   	ljmp	start
   560  01D7                     __end_of_main:
   561                           
   562                           	psect	text1
   563  014A                     __ptext1:	
   564 ;; *************** function _setup *****************
   565 ;; Defined at:
   566 ;;		line 112 in file "mainL08.c"
   567 ;; Parameters:    Size  Location     Type
   568 ;;		None
   569 ;; Auto vars:     Size  Location     Type
   570 ;;		None
   571 ;; Return value:  Size  Location     Type
   572 ;;                  1    wreg      void 
   573 ;; Registers used:
   574 ;;		wreg, status,2, status,0
   575 ;; Tracked objects:
   576 ;;		On entry : 0/0
   577 ;;		On exit  : 0/0
   578 ;;		Unchanged: 0/0
   579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   580 ;;      Params:         0       0       0       0       0
   581 ;;      Locals:         0       0       0       0       0
   582 ;;      Temps:          0       0       0       0       0
   583 ;;      Totals:         0       0       0       0       0
   584 ;;Total ram usage:        0 bytes
   585 ;; Hardware stack levels used:    1
   586 ;; Hardware stack levels required when called:    3
   587 ;; This function calls:
   588 ;;		Nothing
   589 ;; This function is called by:
   590 ;;		_main
   591 ;; This function uses a non-reentrant model
   592 ;;
   593                           
   594                           
   595                           ;psect for function _setup
   596  014A                     _setup:
   597  014A                     l1169:	
   598                           ;incstack = 0
   599                           ; Regs used in _setup: [wreg+status,2+status,0]
   600                           
   601                           
   602                           ;mainL08.c: 114: 
   603  014A  1683               	bsf	3,5	;RP0=1, select bank3
   604  014B  1703               	bsf	3,6	;RP1=1, select bank3
   605  014C  1408               	bsf	8,0	;volatile
   606                           
   607                           ;mainL08.c: 115: 
   608  014D  1488               	bsf	8,1	;volatile
   609  014E                     l1171:
   610                           
   611                           ;mainL08.c: 116: 
   612  014E  0189               	clrf	9	;volatile
   613  014F                     l1173:
   614                           
   615                           ;mainL08.c: 117: 
   616  014F  1683               	bsf	3,5	;RP0=1, select bank1
   617  0150  1303               	bcf	3,6	;RP1=0, select bank1
   618  0151  1405               	bsf	5,0	;volatile
   619  0152                     l1175:
   620                           
   621                           ;mainL08.c: 118: void division (void){
   622  0152  1485               	bsf	5,1	;volatile
   623                           
   624                           ;mainL08.c: 119:     centenas = dividendo/100;
   625  0153  0187               	clrf	7	;volatile
   626                           
   627                           ;mainL08.c: 120:     residuo = dividendo%100;
   628  0154  0188               	clrf	8	;volatile
   629                           
   630                           ;mainL08.c: 121:     decenas = residuo/10;
   631  0155  0189               	clrf	9	;volatile
   632  0156                     l1177:
   633                           
   634                           ;mainL08.c: 123: 
   635  0156  120F               	bcf	15,4	;volatile
   636  0157                     l1179:
   637                           
   638                           ;mainL08.c: 124:     return;
   639  0157  168F               	bsf	15,5	;volatile
   640  0158                     l1181:
   641                           
   642                           ;mainL08.c: 125: }
   643  0158  130F               	bcf	15,6	;volatile
   644  0159                     l1183:
   645                           
   646                           ;mainL08.c: 126: 
   647  0159  140F               	bsf	15,0	;volatile
   648  015A                     l1185:
   649                           
   650                           ;mainL08.c: 128: 
   651  015A  1281               	bcf	1,5	;volatile
   652  015B                     l1187:
   653                           
   654                           ;mainL08.c: 129: 
   655  015B  1181               	bcf	1,3	;volatile
   656  015C                     l1189:
   657                           
   658                           ;mainL08.c: 130:     transistores = 0x00;
   659  015C  1401               	bsf	1,0	;volatile
   660  015D                     l1191:
   661                           
   662                           ;mainL08.c: 131:     if (transistores == 0b00000000){
   663  015D  1481               	bsf	1,1	;volatile
   664  015E                     l1193:
   665                           
   666                           ;mainL08.c: 132:         PORTE = 0x00;
   667  015E  1501               	bsf	1,2	;volatile
   668  015F                     l1195:
   669                           
   670                           ;mainL08.c: 133:         display1();
   671  015F  30FF               	movlw	255
   672  0160  1283               	bcf	3,5	;RP0=0, select bank0
   673  0161  1303               	bcf	3,6	;RP1=0, select bank0
   674  0162  0081               	movwf	1	;volatile
   675  0163                     l1197:
   676                           
   677                           ;mainL08.c: 135:     if (transistores == 0b00000001){
   678  0163  1683               	bsf	3,5	;RP0=1, select bank1
   679  0164  1303               	bcf	3,6	;RP1=0, select bank1
   680  0165  170C               	bsf	12,6	;volatile
   681  0166                     l1199:
   682                           
   683                           ;mainL08.c: 136:         PORTE = 0x00;
   684  0166  1283               	bcf	3,5	;RP0=0, select bank0
   685  0167  1303               	bcf	3,6	;RP1=0, select bank0
   686  0168  130C               	bcf	12,6	;volatile
   687  0169                     l1201:
   688                           
   689                           ;mainL08.c: 137:         display2();
   690  0169  178B               	bsf	11,7	;volatile
   691  016A                     l1203:
   692                           
   693                           ;mainL08.c: 138:     }
   694  016A  168B               	bsf	11,5	;volatile
   695  016B                     l1205:
   696                           
   697                           ;mainL08.c: 139:     if (transistores == 0b00000010){
   698  016B  110B               	bcf	11,2	;volatile
   699  016C                     l1207:
   700                           
   701                           ;mainL08.c: 140:         PORTE = 0x00;
   702  016C  170B               	bsf	11,6	;volatile
   703  016D                     l1209:
   704                           
   705                           ;mainL08.c: 142:     }
   706  016D  171F               	bsf	31,6	;volatile
   707  016E                     l1211:
   708                           
   709                           ;mainL08.c: 143:     return;
   710  016E  179F               	bsf	31,7	;volatile
   711  016F                     l1213:
   712                           
   713                           ;mainL08.c: 144: }
   714  016F  141F               	bsf	31,0	;volatile
   715  0170                     l1215:
   716                           
   717                           ;mainL08.c: 145: 
   718  0170  1683               	bsf	3,5	;RP0=1, select bank1
   719  0171  1303               	bcf	3,6	;RP1=0, select bank1
   720  0172  139F               	bcf	31,7	;volatile
   721  0173                     l1217:
   722                           
   723                           ;mainL08.c: 146: void display1(void){
   724  0173  129F               	bcf	31,5	;volatile
   725  0174                     l1219:
   726                           
   727                           ;mainL08.c: 147:     PORTEbits.RE0 = 1;
   728  0174  121F               	bcf	31,4	;volatile
   729  0175                     l1221:
   730                           
   731                           ;mainL08.c: 148: 
   732  0175  30C3               	movlw	-61
   733  0176  1283               	bcf	3,5	;RP0=0, select bank0
   734  0177  1303               	bcf	3,6	;RP1=0, select bank0
   735  0178  059F               	andwf	31,f	;volatile
   736  0179                     l1223:
   737                           
   738                           ;mainL08.c: 150:     transistores = 0b00000001;
   739  0179  0187               	clrf	7	;volatile
   740  017A                     l1225:
   741                           
   742                           ;mainL08.c: 151: 
   743  017A  0188               	clrf	8	;volatile
   744  017B                     l1227:
   745                           
   746                           ;mainL08.c: 152:     return;
   747  017B  0189               	clrf	9	;volatile
   748  017C                     l97:
   749  017C  0008               	return
   750  017D                     __end_of_setup:
   751                           
   752                           	psect	text2
   753  0094                     __ptext2:	
   754 ;; *************** function _division *****************
   755 ;; Defined at:
   756 ;;		line 160 in file "mainL08.c"
   757 ;; Parameters:    Size  Location     Type
   758 ;;		None
   759 ;; Auto vars:     Size  Location     Type
   760 ;;		None
   761 ;; Return value:  Size  Location     Type
   762 ;;                  1    wreg      void 
   763 ;; Registers used:
   764 ;;		wreg, status,2, status,0, pclath, cstack
   765 ;; Tracked objects:
   766 ;;		On entry : 0/0
   767 ;;		On exit  : 0/0
   768 ;;		Unchanged: 0/0
   769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   770 ;;      Params:         0       0       0       0       0
   771 ;;      Locals:         0       0       0       0       0
   772 ;;      Temps:          0       3       0       0       0
   773 ;;      Totals:         0       3       0       0       0
   774 ;;Total ram usage:        3 bytes
   775 ;; Hardware stack levels used:    1
   776 ;; Hardware stack levels required when called:    4
   777 ;; This function calls:
   778 ;;		___awdiv
   779 ;;		___awmod
   780 ;; This function is called by:
   781 ;;		_main
   782 ;; This function uses a non-reentrant model
   783 ;;
   784                           
   785                           
   786                           ;psect for function _division
   787  0094                     _division:
   788  0094                     l1229:	
   789                           ;incstack = 0
   790                           ; Regs used in _division: [wreg+status,2+status,0+pclath+cstack]
   791                           
   792                           
   793                           ;mainL08.c: 161:     return;
   794  0094  3064               	movlw	100
   795  0095  1283               	bcf	3,5	;RP0=0, select bank0
   796  0096  1303               	bcf	3,6	;RP1=0, select bank0
   797  0097  00B0               	movwf	___awdiv@divisor
   798  0098  3000               	movlw	0
   799  0099  00B1               	movwf	___awdiv@divisor+1
   800  009A  0874               	movf	_dividendo,w
   801  009B  00B9               	movwf	??_division
   802  009C  01BA               	clrf	??_division+1
   803  009D  0839               	movf	??_division,w
   804  009E  00B2               	movwf	___awdiv@dividend
   805  009F  083A               	movf	??_division+1,w
   806  00A0  00B3               	movwf	___awdiv@dividend+1
   807  00A1  120A  118A  202B  120A  118A  	fcall	___awdiv
   808  00A6  1283               	bcf	3,5	;RP0=0, select bank0
   809  00A7  1303               	bcf	3,6	;RP1=0, select bank0
   810  00A8  0830               	movf	?___awdiv,w
   811  00A9  00BB               	movwf	??_division+2
   812  00AA  083B               	movf	??_division+2,w
   813  00AB  00F3               	movwf	_centenas
   814                           
   815                           ;mainL08.c: 162: }
   816  00AC  3064               	movlw	100
   817  00AD  00B0               	movwf	___awmod@divisor
   818  00AE  3000               	movlw	0
   819  00AF  00B1               	movwf	___awmod@divisor+1
   820  00B0  0874               	movf	_dividendo,w
   821  00B1  00B9               	movwf	??_division
   822  00B2  01BA               	clrf	??_division+1
   823  00B3  0839               	movf	??_division,w
   824  00B4  00B2               	movwf	___awmod@dividend
   825  00B5  083A               	movf	??_division+1,w
   826  00B6  00B3               	movwf	___awmod@dividend+1
   827  00B7  120A  118A  20EF  120A  118A  	fcall	___awmod
   828  00BC  1283               	bcf	3,5	;RP0=0, select bank0
   829  00BD  1303               	bcf	3,6	;RP1=0, select bank0
   830  00BE  0830               	movf	?___awmod,w
   831  00BF  00BB               	movwf	??_division+2
   832  00C0  083B               	movf	??_division+2,w
   833  00C1  00F0               	movwf	_residuo
   834                           
   835                           ;mainL08.c: 163: 
   836  00C2  300A               	movlw	10
   837  00C3  00B0               	movwf	___awdiv@divisor
   838  00C4  3000               	movlw	0
   839  00C5  00B1               	movwf	___awdiv@divisor+1
   840  00C6  0870               	movf	_residuo,w
   841  00C7  00B9               	movwf	??_division
   842  00C8  01BA               	clrf	??_division+1
   843  00C9  0839               	movf	??_division,w
   844  00CA  00B2               	movwf	___awdiv@dividend
   845  00CB  083A               	movf	??_division+1,w
   846  00CC  00B3               	movwf	___awdiv@dividend+1
   847  00CD  120A  118A  202B  120A  118A  	fcall	___awdiv
   848  00D2  1283               	bcf	3,5	;RP0=0, select bank0
   849  00D3  1303               	bcf	3,6	;RP1=0, select bank0
   850  00D4  0830               	movf	?___awdiv,w
   851  00D5  00BB               	movwf	??_division+2
   852  00D6  083B               	movf	??_division+2,w
   853  00D7  00F2               	movwf	_decenas
   854                           
   855                           ;mainL08.c: 164: void display3(void){
   856  00D8  300A               	movlw	10
   857  00D9  00B0               	movwf	___awmod@divisor
   858  00DA  3000               	movlw	0
   859  00DB  00B1               	movwf	___awmod@divisor+1
   860  00DC  0870               	movf	_residuo,w
   861  00DD  00B9               	movwf	??_division
   862  00DE  01BA               	clrf	??_division+1
   863  00DF  0839               	movf	??_division,w
   864  00E0  00B2               	movwf	___awmod@dividend
   865  00E1  083A               	movf	??_division+1,w
   866  00E2  00B3               	movwf	___awmod@dividend+1
   867  00E3  120A  118A  20EF  120A  118A  	fcall	___awmod
   868  00E8  1283               	bcf	3,5	;RP0=0, select bank0
   869  00E9  1303               	bcf	3,6	;RP1=0, select bank0
   870  00EA  0830               	movf	?___awmod,w
   871  00EB  00BB               	movwf	??_division+2
   872  00EC  083B               	movf	??_division+2,w
   873  00ED  00BF               	movwf	_unidades
   874  00EE                     l100:
   875  00EE  0008               	return
   876  00EF                     __end_of_division:
   877                           
   878                           	psect	text3
   879  00EF                     __ptext3:	
   880 ;; *************** function ___awmod *****************
   881 ;; Defined at:
   882 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
   883 ;; Parameters:    Size  Location     Type
   884 ;;  divisor         2    0[BANK0 ] int 
   885 ;;  dividend        2    2[BANK0 ] int 
   886 ;; Auto vars:     Size  Location     Type
   887 ;;  sign            1    6[BANK0 ] unsigned char 
   888 ;;  counter         1    5[BANK0 ] unsigned char 
   889 ;; Return value:  Size  Location     Type
   890 ;;                  2    0[BANK0 ] int 
   891 ;; Registers used:
   892 ;;		wreg, status,2, status,0
   893 ;; Tracked objects:
   894 ;;		On entry : 0/0
   895 ;;		On exit  : 0/0
   896 ;;		Unchanged: 0/0
   897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   898 ;;      Params:         0       4       0       0       0
   899 ;;      Locals:         0       2       0       0       0
   900 ;;      Temps:          0       1       0       0       0
   901 ;;      Totals:         0       7       0       0       0
   902 ;;Total ram usage:        7 bytes
   903 ;; Hardware stack levels used:    1
   904 ;; Hardware stack levels required when called:    3
   905 ;; This function calls:
   906 ;;		Nothing
   907 ;; This function is called by:
   908 ;;		_division
   909 ;; This function uses a non-reentrant model
   910 ;;
   911                           
   912                           
   913                           ;psect for function ___awmod
   914  00EF                     ___awmod:
   915  00EF                     l1131:	
   916                           ;incstack = 0
   917                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   918                           
   919  00EF  1283               	bcf	3,5	;RP0=0, select bank0
   920  00F0  1303               	bcf	3,6	;RP1=0, select bank0
   921  00F1  01B6               	clrf	___awmod@sign
   922  00F2                     l1133:
   923  00F2  1FB3               	btfss	___awmod@dividend+1,7
   924  00F3  28F5               	goto	u651
   925  00F4  28F6               	goto	u650
   926  00F5                     u651:
   927  00F5  28FD               	goto	l1139
   928  00F6                     u650:
   929  00F6                     l1135:
   930  00F6  09B2               	comf	___awmod@dividend,f
   931  00F7  09B3               	comf	___awmod@dividend+1,f
   932  00F8  0AB2               	incf	___awmod@dividend,f
   933  00F9  1903               	skipnz
   934  00FA  0AB3               	incf	___awmod@dividend+1,f
   935  00FB                     l1137:
   936  00FB  01B6               	clrf	___awmod@sign
   937  00FC  0AB6               	incf	___awmod@sign,f
   938  00FD                     l1139:
   939  00FD  1FB1               	btfss	___awmod@divisor+1,7
   940  00FE  2900               	goto	u661
   941  00FF  2901               	goto	u660
   942  0100                     u661:
   943  0100  2906               	goto	l1143
   944  0101                     u660:
   945  0101                     l1141:
   946  0101  09B0               	comf	___awmod@divisor,f
   947  0102  09B1               	comf	___awmod@divisor+1,f
   948  0103  0AB0               	incf	___awmod@divisor,f
   949  0104  1903               	skipnz
   950  0105  0AB1               	incf	___awmod@divisor+1,f
   951  0106                     l1143:
   952  0106  0830               	movf	___awmod@divisor,w
   953  0107  0431               	iorwf	___awmod@divisor+1,w
   954  0108  1903               	btfsc	3,2
   955  0109  290B               	goto	u671
   956  010A  290C               	goto	u670
   957  010B                     u671:
   958  010B  293B               	goto	l1161
   959  010C                     u670:
   960  010C                     l1145:
   961  010C  01B5               	clrf	___awmod@counter
   962  010D  0AB5               	incf	___awmod@counter,f
   963  010E  291A               	goto	l1151
   964  010F                     l1147:
   965  010F  3001               	movlw	1
   966  0110                     u685:
   967  0110  1003               	clrc
   968  0111  0DB0               	rlf	___awmod@divisor,f
   969  0112  0DB1               	rlf	___awmod@divisor+1,f
   970  0113  3EFF               	addlw	-1
   971  0114  1D03               	skipz
   972  0115  2910               	goto	u685
   973  0116                     l1149:
   974  0116  3001               	movlw	1
   975  0117  00B4               	movwf	??___awmod
   976  0118  0834               	movf	??___awmod,w
   977  0119  07B5               	addwf	___awmod@counter,f
   978  011A                     l1151:
   979  011A  1FB1               	btfss	___awmod@divisor+1,7
   980  011B  291D               	goto	u691
   981  011C  291E               	goto	u690
   982  011D                     u691:
   983  011D  290F               	goto	l1147
   984  011E                     u690:
   985  011E                     l1153:
   986  011E  0831               	movf	___awmod@divisor+1,w
   987  011F  0233               	subwf	___awmod@dividend+1,w
   988  0120  1D03               	skipz
   989  0121  2924               	goto	u705
   990  0122  0830               	movf	___awmod@divisor,w
   991  0123  0232               	subwf	___awmod@dividend,w
   992  0124                     u705:
   993  0124  1C03               	skipc
   994  0125  2927               	goto	u701
   995  0126  2928               	goto	u700
   996  0127                     u701:
   997  0127  292E               	goto	l1157
   998  0128                     u700:
   999  0128                     l1155:
  1000  0128  0830               	movf	___awmod@divisor,w
  1001  0129  02B2               	subwf	___awmod@dividend,f
  1002  012A  0831               	movf	___awmod@divisor+1,w
  1003  012B  1C03               	skipc
  1004  012C  03B3               	decf	___awmod@dividend+1,f
  1005  012D  02B3               	subwf	___awmod@dividend+1,f
  1006  012E                     l1157:
  1007  012E  3001               	movlw	1
  1008  012F                     u715:
  1009  012F  1003               	clrc
  1010  0130  0CB1               	rrf	___awmod@divisor+1,f
  1011  0131  0CB0               	rrf	___awmod@divisor,f
  1012  0132  3EFF               	addlw	-1
  1013  0133  1D03               	skipz
  1014  0134  292F               	goto	u715
  1015  0135                     l1159:
  1016  0135  3001               	movlw	1
  1017  0136  02B5               	subwf	___awmod@counter,f
  1018  0137  1D03               	btfss	3,2
  1019  0138  293A               	goto	u721
  1020  0139  293B               	goto	u720
  1021  013A                     u721:
  1022  013A  291E               	goto	l1153
  1023  013B                     u720:
  1024  013B                     l1161:
  1025  013B  0836               	movf	___awmod@sign,w
  1026  013C  1903               	btfsc	3,2
  1027  013D  293F               	goto	u731
  1028  013E  2940               	goto	u730
  1029  013F                     u731:
  1030  013F  2945               	goto	l1165
  1031  0140                     u730:
  1032  0140                     l1163:
  1033  0140  09B2               	comf	___awmod@dividend,f
  1034  0141  09B3               	comf	___awmod@dividend+1,f
  1035  0142  0AB2               	incf	___awmod@dividend,f
  1036  0143  1903               	skipnz
  1037  0144  0AB3               	incf	___awmod@dividend+1,f
  1038  0145                     l1165:
  1039  0145  0833               	movf	___awmod@dividend+1,w
  1040  0146  00B1               	movwf	?___awmod+1
  1041  0147  0832               	movf	___awmod@dividend,w
  1042  0148  00B0               	movwf	?___awmod
  1043  0149                     l367:
  1044  0149  0008               	return
  1045  014A                     __end_of___awmod:
  1046                           
  1047                           	psect	text4
  1048  002B                     __ptext4:	
  1049 ;; *************** function ___awdiv *****************
  1050 ;; Defined at:
  1051 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1052 ;; Parameters:    Size  Location     Type
  1053 ;;  divisor         2    0[BANK0 ] int 
  1054 ;;  dividend        2    2[BANK0 ] int 
  1055 ;; Auto vars:     Size  Location     Type
  1056 ;;  quotient        2    7[BANK0 ] int 
  1057 ;;  sign            1    6[BANK0 ] unsigned char 
  1058 ;;  counter         1    5[BANK0 ] unsigned char 
  1059 ;; Return value:  Size  Location     Type
  1060 ;;                  2    0[BANK0 ] int 
  1061 ;; Registers used:
  1062 ;;		wreg, status,2, status,0
  1063 ;; Tracked objects:
  1064 ;;		On entry : 0/0
  1065 ;;		On exit  : 0/0
  1066 ;;		Unchanged: 0/0
  1067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1068 ;;      Params:         0       4       0       0       0
  1069 ;;      Locals:         0       4       0       0       0
  1070 ;;      Temps:          0       1       0       0       0
  1071 ;;      Totals:         0       9       0       0       0
  1072 ;;Total ram usage:        9 bytes
  1073 ;; Hardware stack levels used:    1
  1074 ;; Hardware stack levels required when called:    3
  1075 ;; This function calls:
  1076 ;;		Nothing
  1077 ;; This function is called by:
  1078 ;;		_division
  1079 ;; This function uses a non-reentrant model
  1080 ;;
  1081                           
  1082                           
  1083                           ;psect for function ___awdiv
  1084  002B                     ___awdiv:
  1085  002B                     l1087:	
  1086                           ;incstack = 0
  1087                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1088                           
  1089  002B  1283               	bcf	3,5	;RP0=0, select bank0
  1090  002C  1303               	bcf	3,6	;RP1=0, select bank0
  1091  002D  01B6               	clrf	___awdiv@sign
  1092  002E                     l1089:
  1093  002E  1FB1               	btfss	___awdiv@divisor+1,7
  1094  002F  2831               	goto	u551
  1095  0030  2832               	goto	u550
  1096  0031                     u551:
  1097  0031  2839               	goto	l1095
  1098  0032                     u550:
  1099  0032                     l1091:
  1100  0032  09B0               	comf	___awdiv@divisor,f
  1101  0033  09B1               	comf	___awdiv@divisor+1,f
  1102  0034  0AB0               	incf	___awdiv@divisor,f
  1103  0035  1903               	skipnz
  1104  0036  0AB1               	incf	___awdiv@divisor+1,f
  1105  0037                     l1093:
  1106  0037  01B6               	clrf	___awdiv@sign
  1107  0038  0AB6               	incf	___awdiv@sign,f
  1108  0039                     l1095:
  1109  0039  1FB3               	btfss	___awdiv@dividend+1,7
  1110  003A  283C               	goto	u561
  1111  003B  283D               	goto	u560
  1112  003C                     u561:
  1113  003C  2846               	goto	l1101
  1114  003D                     u560:
  1115  003D                     l1097:
  1116  003D  09B2               	comf	___awdiv@dividend,f
  1117  003E  09B3               	comf	___awdiv@dividend+1,f
  1118  003F  0AB2               	incf	___awdiv@dividend,f
  1119  0040  1903               	skipnz
  1120  0041  0AB3               	incf	___awdiv@dividend+1,f
  1121  0042                     l1099:
  1122  0042  3001               	movlw	1
  1123  0043  00B4               	movwf	??___awdiv
  1124  0044  0834               	movf	??___awdiv,w
  1125  0045  06B6               	xorwf	___awdiv@sign,f
  1126  0046                     l1101:
  1127  0046  01B7               	clrf	___awdiv@quotient
  1128  0047  01B8               	clrf	___awdiv@quotient+1
  1129  0048                     l1103:
  1130  0048  0830               	movf	___awdiv@divisor,w
  1131  0049  0431               	iorwf	___awdiv@divisor+1,w
  1132  004A  1903               	btfsc	3,2
  1133  004B  284D               	goto	u571
  1134  004C  284E               	goto	u570
  1135  004D                     u571:
  1136  004D  2885               	goto	l1123
  1137  004E                     u570:
  1138  004E                     l1105:
  1139  004E  01B5               	clrf	___awdiv@counter
  1140  004F  0AB5               	incf	___awdiv@counter,f
  1141  0050  285C               	goto	l1111
  1142  0051                     l1107:
  1143  0051  3001               	movlw	1
  1144  0052                     u585:
  1145  0052  1003               	clrc
  1146  0053  0DB0               	rlf	___awdiv@divisor,f
  1147  0054  0DB1               	rlf	___awdiv@divisor+1,f
  1148  0055  3EFF               	addlw	-1
  1149  0056  1D03               	skipz
  1150  0057  2852               	goto	u585
  1151  0058                     l1109:
  1152  0058  3001               	movlw	1
  1153  0059  00B4               	movwf	??___awdiv
  1154  005A  0834               	movf	??___awdiv,w
  1155  005B  07B5               	addwf	___awdiv@counter,f
  1156  005C                     l1111:
  1157  005C  1FB1               	btfss	___awdiv@divisor+1,7
  1158  005D  285F               	goto	u591
  1159  005E  2860               	goto	u590
  1160  005F                     u591:
  1161  005F  2851               	goto	l1107
  1162  0060                     u590:
  1163  0060                     l1113:
  1164  0060  3001               	movlw	1
  1165  0061                     u605:
  1166  0061  1003               	clrc
  1167  0062  0DB7               	rlf	___awdiv@quotient,f
  1168  0063  0DB8               	rlf	___awdiv@quotient+1,f
  1169  0064  3EFF               	addlw	-1
  1170  0065  1D03               	skipz
  1171  0066  2861               	goto	u605
  1172  0067  0831               	movf	___awdiv@divisor+1,w
  1173  0068  0233               	subwf	___awdiv@dividend+1,w
  1174  0069  1D03               	skipz
  1175  006A  286D               	goto	u615
  1176  006B  0830               	movf	___awdiv@divisor,w
  1177  006C  0232               	subwf	___awdiv@dividend,w
  1178  006D                     u615:
  1179  006D  1C03               	skipc
  1180  006E  2870               	goto	u611
  1181  006F  2871               	goto	u610
  1182  0070                     u611:
  1183  0070  2878               	goto	l1119
  1184  0071                     u610:
  1185  0071                     l1115:
  1186  0071  0830               	movf	___awdiv@divisor,w
  1187  0072  02B2               	subwf	___awdiv@dividend,f
  1188  0073  0831               	movf	___awdiv@divisor+1,w
  1189  0074  1C03               	skipc
  1190  0075  03B3               	decf	___awdiv@dividend+1,f
  1191  0076  02B3               	subwf	___awdiv@dividend+1,f
  1192  0077                     l1117:
  1193  0077  1437               	bsf	___awdiv@quotient,0
  1194  0078                     l1119:
  1195  0078  3001               	movlw	1
  1196  0079                     u625:
  1197  0079  1003               	clrc
  1198  007A  0CB1               	rrf	___awdiv@divisor+1,f
  1199  007B  0CB0               	rrf	___awdiv@divisor,f
  1200  007C  3EFF               	addlw	-1
  1201  007D  1D03               	skipz
  1202  007E  2879               	goto	u625
  1203  007F                     l1121:
  1204  007F  3001               	movlw	1
  1205  0080  02B5               	subwf	___awdiv@counter,f
  1206  0081  1D03               	btfss	3,2
  1207  0082  2884               	goto	u631
  1208  0083  2885               	goto	u630
  1209  0084                     u631:
  1210  0084  2860               	goto	l1113
  1211  0085                     u630:
  1212  0085                     l1123:
  1213  0085  0836               	movf	___awdiv@sign,w
  1214  0086  1903               	btfsc	3,2
  1215  0087  2889               	goto	u641
  1216  0088  288A               	goto	u640
  1217  0089                     u641:
  1218  0089  288F               	goto	l1127
  1219  008A                     u640:
  1220  008A                     l1125:
  1221  008A  09B7               	comf	___awdiv@quotient,f
  1222  008B  09B8               	comf	___awdiv@quotient+1,f
  1223  008C  0AB7               	incf	___awdiv@quotient,f
  1224  008D  1903               	skipnz
  1225  008E  0AB8               	incf	___awdiv@quotient+1,f
  1226  008F                     l1127:
  1227  008F  0838               	movf	___awdiv@quotient+1,w
  1228  0090  00B1               	movwf	?___awdiv+1
  1229  0091  0837               	movf	___awdiv@quotient,w
  1230  0092  00B0               	movwf	?___awdiv
  1231  0093                     l354:
  1232  0093  0008               	return
  1233  0094                     __end_of___awdiv:
  1234                           
  1235                           	psect	text5
  1236  017D                     __ptext5:	
  1237 ;; *************** function _isr *****************
  1238 ;; Defined at:
  1239 ;;		line 65 in file "mainL08.c"
  1240 ;; Parameters:    Size  Location     Type
  1241 ;;		None
  1242 ;; Auto vars:     Size  Location     Type
  1243 ;;		None
  1244 ;; Return value:  Size  Location     Type
  1245 ;;                  1    wreg      void 
  1246 ;; Registers used:
  1247 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1248 ;; Tracked objects:
  1249 ;;		On entry : 0/0
  1250 ;;		On exit  : 0/0
  1251 ;;		Unchanged: 0/0
  1252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1253 ;;      Params:         0       0       0       0       0
  1254 ;;      Locals:         0       0       0       0       0
  1255 ;;      Temps:          4       0       0       0       0
  1256 ;;      Totals:         4       0       0       0       0
  1257 ;;Total ram usage:        4 bytes
  1258 ;; Hardware stack levels used:    1
  1259 ;; Hardware stack levels required when called:    2
  1260 ;; This function calls:
  1261 ;;		_multiplexado
  1262 ;; This function is called by:
  1263 ;;		Interrupt level 1
  1264 ;; This function uses a non-reentrant model
  1265 ;;
  1266                           
  1267                           
  1268                           ;psect for function _isr
  1269  017D                     _isr:
  1270  017D                     i1l1051:
  1271                           
  1272                           ;mainL08.c: 66: 
  1273  017D  1283               	bcf	3,5	;RP0=0, select bank0
  1274  017E  1303               	bcf	3,6	;RP1=0, select bank0
  1275  017F  1F0C               	btfss	12,6	;volatile
  1276  0180  2982               	goto	u50_21
  1277  0181  2983               	goto	u50_20
  1278  0182                     u50_21:
  1279  0182  2994               	goto	i1l1061
  1280  0183                     u50_20:
  1281  0183                     i1l1053:
  1282                           
  1283                           ;mainL08.c: 67: 
  1284  0183  0C1F               	rrf	31,w	;volatile
  1285  0184  00F6               	movwf	??_isr
  1286  0185  0C76               	rrf	??_isr,w
  1287  0186  390F               	andlw	15
  1288  0187  3A00               	xorlw	0
  1289  0188  1D03               	skipz
  1290  0189  298B               	goto	u51_21
  1291  018A  298C               	goto	u51_20
  1292  018B                     u51_21:
  1293  018B  298F               	goto	i1l1057
  1294  018C                     u51_20:
  1295  018C                     i1l1055:
  1296                           
  1297                           ;mainL08.c: 68: 
  1298  018C  081E               	movf	30,w	;volatile
  1299  018D  0087               	movwf	7	;volatile
  1300                           
  1301                           ;mainL08.c: 69: 
  1302  018E  2993               	goto	i1l1059
  1303  018F                     i1l1057:
  1304                           
  1305                           ;mainL08.c: 71: 
  1306  018F  081E               	movf	30,w	;volatile
  1307  0190  00F6               	movwf	??_isr
  1308  0191  0876               	movf	??_isr,w
  1309  0192  00F4               	movwf	_dividendo
  1310  0193                     i1l1059:
  1311                           
  1312                           ;mainL08.c: 73:     ANSELbits.ANS1 = 1;
  1313  0193  130C               	bcf	12,6	;volatile
  1314  0194                     i1l1061:
  1315                           
  1316                           ;mainL08.c: 78:     TRISD = 0x00;
  1317  0194  1D0B               	btfss	11,2	;volatile
  1318  0195  2997               	goto	u52_21
  1319  0196  2998               	goto	u52_20
  1320  0197                     u52_21:
  1321  0197  29A2               	goto	i1l83
  1322  0198                     u52_20:
  1323  0198                     i1l1063:
  1324                           
  1325                           ;mainL08.c: 79:     TRISE = 0x00;
  1326  0198  120A  118A  21D7  120A  118A  	fcall	_multiplexado
  1327  019D                     i1l1065:
  1328                           
  1329                           ;mainL08.c: 80: 
  1330  019D  30FF               	movlw	255
  1331  019E  1283               	bcf	3,5	;RP0=0, select bank0
  1332  019F  1303               	bcf	3,6	;RP1=0, select bank0
  1333  01A0  0081               	movwf	1	;volatile
  1334  01A1                     i1l1067:
  1335                           
  1336                           ;mainL08.c: 81:     OSCCONbits.IRCF0 = 0;
  1337  01A1  110B               	bcf	11,2	;volatile
  1338  01A2                     i1l83:
  1339  01A2  0879               	movf	??_isr+3,w
  1340  01A3  008A               	movwf	10
  1341  01A4  0878               	movf	??_isr+2,w
  1342  01A5  0084               	movwf	4
  1343  01A6  0E77               	swapf	??_isr+1,w
  1344  01A7  0083               	movwf	3
  1345  01A8  0EFE               	swapf	btemp,f
  1346  01A9  0E7E               	swapf	btemp,w
  1347  01AA  0009               	retfie
  1348  01AB                     __end_of_isr:
  1349                           
  1350                           	psect	intentry
  1351  0004                     __pintentry:	
  1352                           ;incstack = 0
  1353                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1354                           
  1355  0004                     interrupt_function:
  1356  007E                     saved_w	set	btemp
  1357  0004  00FE               	movwf	btemp
  1358  0005  0E03               	swapf	3,w
  1359  0006  00F7               	movwf	??_isr+1
  1360  0007  0804               	movf	4,w
  1361  0008  00F8               	movwf	??_isr+2
  1362  0009  080A               	movf	10,w
  1363  000A  00F9               	movwf	??_isr+3
  1364  000B  120A  118A  297D   	ljmp	_isr
  1365                           
  1366                           	psect	text6
  1367  01D7                     __ptext6:	
  1368 ;; *************** function _multiplexado *****************
  1369 ;; Defined at:
  1370 ;;		line 169 in file "mainL08.c"
  1371 ;; Parameters:    Size  Location     Type
  1372 ;;		None
  1373 ;; Auto vars:     Size  Location     Type
  1374 ;;		None
  1375 ;; Return value:  Size  Location     Type
  1376 ;;                  1    wreg      void 
  1377 ;; Registers used:
  1378 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1379 ;; Tracked objects:
  1380 ;;		On entry : 0/0
  1381 ;;		On exit  : 0/0
  1382 ;;		Unchanged: 0/0
  1383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1384 ;;      Params:         0       0       0       0       0
  1385 ;;      Locals:         0       0       0       0       0
  1386 ;;      Temps:          0       0       0       0       0
  1387 ;;      Totals:         0       0       0       0       0
  1388 ;;Total ram usage:        0 bytes
  1389 ;; Hardware stack levels used:    1
  1390 ;; Hardware stack levels required when called:    1
  1391 ;; This function calls:
  1392 ;;		_display1
  1393 ;;		_display2
  1394 ;;		_display3
  1395 ;; This function is called by:
  1396 ;;		_isr
  1397 ;; This function uses a non-reentrant model
  1398 ;;
  1399                           
  1400                           
  1401                           ;psect for function _multiplexado
  1402  01D7                     _multiplexado:
  1403  01D7                     i1l1025:	
  1404                           ;incstack = 0
  1405                           ; Regs used in _multiplexado: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1406                           
  1407  01D7  01F1               	clrf	_transistores
  1408  01D8                     i1l1027:
  1409  01D8  0871               	movf	_transistores,w
  1410  01D9  1D03               	btfss	3,2
  1411  01DA  29DC               	goto	u47_21
  1412  01DB  29DD               	goto	u47_20
  1413  01DC                     u47_21:
  1414  01DC  29E5               	goto	i1l1033
  1415  01DD                     u47_20:
  1416  01DD                     i1l1029:
  1417  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  1418  01DE  1303               	bcf	3,6	;RP1=0, select bank0
  1419  01DF  0189               	clrf	9	;volatile
  1420  01E0                     i1l1031:
  1421  01E0  120A  118A  2232  120A  118A  	fcall	_display1
  1422  01E5                     i1l1033:
  1423  01E5  0371               	decf	_transistores,w
  1424  01E6  1D03               	btfss	3,2
  1425  01E7  29E9               	goto	u48_21
  1426  01E8  29EA               	goto	u48_20
  1427  01E9                     u48_21:
  1428  01E9  29F2               	goto	i1l1039
  1429  01EA                     u48_20:
  1430  01EA                     i1l1035:
  1431  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  1432  01EB  1303               	bcf	3,6	;RP1=0, select bank0
  1433  01EC  0189               	clrf	9	;volatile
  1434  01ED                     i1l1037:
  1435  01ED  120A  118A  2224  120A  118A  	fcall	_display2
  1436  01F2                     i1l1039:
  1437  01F2  3002               	movlw	2
  1438  01F3  0671               	xorwf	_transistores,w
  1439  01F4  1D03               	btfss	3,2
  1440  01F5  29F7               	goto	u49_21
  1441  01F6  29F8               	goto	u49_20
  1442  01F7                     u49_21:
  1443  01F7  2A00               	goto	i1l106
  1444  01F8                     u49_20:
  1445  01F8                     i1l1041:
  1446  01F8  1283               	bcf	3,5	;RP0=0, select bank0
  1447  01F9  1303               	bcf	3,6	;RP1=0, select bank0
  1448  01FA  0189               	clrf	9	;volatile
  1449  01FB                     i1l1043:
  1450  01FB  120A  118A  223E  120A  118A  	fcall	_display3
  1451  0200                     i1l106:
  1452  0200  0008               	return
  1453  0201                     __end_of_multiplexado:
  1454                           
  1455                           	psect	text7
  1456  023E                     __ptext7:	
  1457 ;; *************** function _display3 *****************
  1458 ;; Defined at:
  1459 ;;		line 206 in file "mainL08.c"
  1460 ;; Parameters:    Size  Location     Type
  1461 ;;		None
  1462 ;; Auto vars:     Size  Location     Type
  1463 ;;		None
  1464 ;; Return value:  Size  Location     Type
  1465 ;;                  1    wreg      void 
  1466 ;; Registers used:
  1467 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1468 ;; Tracked objects:
  1469 ;;		On entry : 0/0
  1470 ;;		On exit  : 0/0
  1471 ;;		Unchanged: 0/0
  1472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1473 ;;      Params:         0       0       0       0       0
  1474 ;;      Locals:         0       0       0       0       0
  1475 ;;      Temps:          0       0       0       0       0
  1476 ;;      Totals:         0       0       0       0       0
  1477 ;;Total ram usage:        0 bytes
  1478 ;; Hardware stack levels used:    1
  1479 ;; This function calls:
  1480 ;;		Nothing
  1481 ;; This function is called by:
  1482 ;;		_multiplexado
  1483 ;; This function uses a non-reentrant model
  1484 ;;
  1485                           
  1486                           
  1487                           ;psect for function _display3
  1488  023E                     _display3:
  1489  023E                     i1l935:	
  1490                           ;incstack = 0
  1491                           ; Regs used in _display3: [wreg-fsr0h+status,2+status,0]
  1492                           
  1493  023E  1283               	bcf	3,5	;RP0=0, select bank0
  1494  023F  1303               	bcf	3,6	;RP1=0, select bank0
  1495  0240  083F               	movf	_unidades,w
  1496  0241  3E20               	addlw	(low (_tabla_7seg| 0))& (0+255)
  1497  0242  0084               	movwf	4
  1498  0243  1383               	bcf	3,7	;select IRP bank0
  1499  0244  0800               	movf	0,w
  1500  0245  0088               	movwf	8	;volatile
  1501  0246                     i1l937:
  1502  0246  01F1               	clrf	_transistores
  1503  0247                     i1l939:
  1504  0247  1509               	bsf	9,2	;volatile
  1505  0248                     i1l115:
  1506  0248  0008               	return
  1507  0249                     __end_of_display3:
  1508                           
  1509                           	psect	text8
  1510  0224                     __ptext8:	
  1511 ;; *************** function _display2 *****************
  1512 ;; Defined at:
  1513 ;;		line 197 in file "mainL08.c"
  1514 ;; Parameters:    Size  Location     Type
  1515 ;;		None
  1516 ;; Auto vars:     Size  Location     Type
  1517 ;;		None
  1518 ;; Return value:  Size  Location     Type
  1519 ;;                  1    wreg      void 
  1520 ;; Registers used:
  1521 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1522 ;; Tracked objects:
  1523 ;;		On entry : 0/0
  1524 ;;		On exit  : 0/0
  1525 ;;		Unchanged: 0/0
  1526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1527 ;;      Params:         0       0       0       0       0
  1528 ;;      Locals:         0       0       0       0       0
  1529 ;;      Temps:          1       0       0       0       0
  1530 ;;      Totals:         1       0       0       0       0
  1531 ;;Total ram usage:        1 bytes
  1532 ;; Hardware stack levels used:    1
  1533 ;; This function calls:
  1534 ;;		Nothing
  1535 ;; This function is called by:
  1536 ;;		_multiplexado
  1537 ;; This function uses a non-reentrant model
  1538 ;;
  1539                           
  1540                           
  1541                           ;psect for function _display2
  1542  0224                     _display2:
  1543  0224                     i1l715:	
  1544                           ;incstack = 0
  1545                           ; Regs used in _display2: [wreg-fsr0h+status,2+status,0]
  1546                           
  1547  0224  0872               	movf	_decenas,w
  1548  0225  3E20               	addlw	(low (_tabla_7seg| 0))& (0+255)
  1549  0226  0084               	movwf	4
  1550  0227  1383               	bcf	3,7	;select IRP bank0
  1551  0228  0800               	movf	0,w
  1552  0229  1283               	bcf	3,5	;RP0=0, select bank0
  1553  022A  1303               	bcf	3,6	;RP1=0, select bank0
  1554  022B  0088               	movwf	8	;volatile
  1555  022C                     i1l717:
  1556  022C  3002               	movlw	2
  1557  022D  00F5               	movwf	??_display2
  1558  022E  0875               	movf	??_display2,w
  1559  022F  00F1               	movwf	_transistores
  1560  0230                     i1l719:
  1561  0230  1489               	bsf	9,1	;volatile
  1562  0231                     i1l112:
  1563  0231  0008               	return
  1564  0232                     __end_of_display2:
  1565                           
  1566                           	psect	text9
  1567  0232                     __ptext9:	
  1568 ;; *************** function _display1 *****************
  1569 ;; Defined at:
  1570 ;;		line 188 in file "mainL08.c"
  1571 ;; Parameters:    Size  Location     Type
  1572 ;;		None
  1573 ;; Auto vars:     Size  Location     Type
  1574 ;;		None
  1575 ;; Return value:  Size  Location     Type
  1576 ;;                  1    wreg      void 
  1577 ;; Registers used:
  1578 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1579 ;; Tracked objects:
  1580 ;;		On entry : 0/0
  1581 ;;		On exit  : 0/0
  1582 ;;		Unchanged: 0/0
  1583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1584 ;;      Params:         0       0       0       0       0
  1585 ;;      Locals:         0       0       0       0       0
  1586 ;;      Temps:          0       0       0       0       0
  1587 ;;      Totals:         0       0       0       0       0
  1588 ;;Total ram usage:        0 bytes
  1589 ;; Hardware stack levels used:    1
  1590 ;; This function calls:
  1591 ;;		Nothing
  1592 ;; This function is called by:
  1593 ;;		_multiplexado
  1594 ;; This function uses a non-reentrant model
  1595 ;;
  1596                           
  1597                           
  1598                           ;psect for function _display1
  1599  0232                     _display1:
  1600  0232                     i1l707:	
  1601                           ;incstack = 0
  1602                           ; Regs used in _display1: [wreg-fsr0h+status,2+status,0]
  1603                           
  1604  0232  1283               	bcf	3,5	;RP0=0, select bank0
  1605  0233  1303               	bcf	3,6	;RP1=0, select bank0
  1606  0234  1409               	bsf	9,0	;volatile
  1607  0235                     i1l709:
  1608  0235  0873               	movf	_centenas,w
  1609  0236  3E20               	addlw	(low (_tabla_7seg| 0))& (0+255)
  1610  0237  0084               	movwf	4
  1611  0238  1383               	bcf	3,7	;select IRP bank0
  1612  0239  0800               	movf	0,w
  1613  023A  0088               	movwf	8	;volatile
  1614  023B                     i1l711:
  1615  023B  01F1               	clrf	_transistores
  1616  023C  0AF1               	incf	_transistores,f
  1617  023D                     i1l109:
  1618  023D  0008               	return
  1619  023E                     __end_of_display1:
  1620  007E                     btemp	set	126	;btemp
  1621  007E                     wtemp0	set	126
  1622                           
  1623                           	psect	config
  1624                           
  1625                           ;Config register CONFIG1 @ 0x2007
  1626                           ;	Oscillator Selection bits
  1627                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1628                           ;	Watchdog Timer Enable bit
  1629                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1630                           ;	Power-up Timer Enable bit
  1631                           ;	PWRTE = OFF, PWRT disabled
  1632                           ;	RE3/MCLR pin function select bit
  1633                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1634                           ;	Code Protection bit
  1635                           ;	CP = OFF, Program memory code protection is disabled
  1636                           ;	Data Code Protection bit
  1637                           ;	CPD = OFF, Data memory code protection is disabled
  1638                           ;	Brown Out Reset Selection bits
  1639                           ;	BOREN = OFF, BOR disabled
  1640                           ;	Internal External Switchover bit
  1641                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1642                           ;	Fail-Safe Clock Monitor Enabled bit
  1643                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1644                           ;	Low Voltage Programming Enable bit
  1645                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  1646                           ;	In-Circuit Debugger Mode bit
  1647                           ;	DEBUG = 0x1, unprogrammed default
  1648  2007                     	org	8199
  1649  2007  30D4               	dw	12500
  1650                           
  1651                           ;Config register CONFIG2 @ 0x2008
  1652                           ;	Brown-out Reset Selection bit
  1653                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1654                           ;	Flash Program Memory Self Write Enable bits
  1655                           ;	WRT = OFF, Write protection off
  1656  2008                     	org	8200
  1657  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     13      32
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _multiplexado->_display2

Critical Paths under _main in BANK0

    _main->_division
    _division->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1598
                                             12 BANK0      1     1      0
                           _division
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _division                                             3     3      0    1598
                                              9 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     793
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     805
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0       0
                                              1 COMMON     4     4      0
                       _multiplexado
 ---------------------------------------------------------------------------------
 (4) _multiplexado                                         0     0      0       0
                           _display1
                           _display2
                           _display3
 ---------------------------------------------------------------------------------
 (5) _display3                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _display2                                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _display1                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _division
     ___awdiv
     ___awmod
   _setup

 _isr (ROOT)
   _multiplexado
     _display1
     _display2
     _display3

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      D      20       5       40.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2A      12        0.0%
ABS                  0      0      2A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Apr 20 12:14:46 2021

                      pc 0002                       l97 017C             ___awdiv@sign 0036  
                     fsr 0004                      l100 00EE                      l354 0093  
                    l367 0149                      u610 0071                      u611 0070  
                    u700 0128                      u605 0061                      u701 0127  
                    u630 0085                      u550 0032                      u631 0084  
                    u615 006D                      u551 0031                      u640 008A  
                    u560 003D                      u720 013B                      u641 0089  
                    u625 0079                      u561 003C                      u721 013A  
                    u705 0124                      u570 004E                      u730 0140  
                    u650 00F6                      u571 004D                      u731 013F  
                    u715 012F                      u651 00F5                      u660 0101  
                    u740 01B9                      u661 0100                      u741 01B8  
                    u590 0060                      u670 010C                      u750 01C2  
                    u591 005F                      u671 010B                      u751 01C1  
                    u585 0052                      u690 011E                      u691 011D  
                    u685 0110                      _isr 017D                      fsr0 0004  
                    indf 0000             ___awmod@sign 0036                     l1101 0046  
                   l1111 005C                     l1103 0048                     l1121 007F  
                   l1113 0060                     l1105 004E                     l1201 0169  
                   l1115 0071                     l1107 0051                     l1123 0085  
                   l1131 00EF                     l1211 016E                     l1203 016A  
                   l1125 008A                     l1117 0077                     l1109 0058  
                   l1141 0101                     l1133 00F2                     l1221 0175  
                   l1213 016F                     l1205 016B                     l1127 008F  
                   l1119 0078                     l1151 011A                     l1143 0106  
                   l1135 00F6                     l1223 0179                     l1215 0170  
                   l1207 016C                     l1153 011E                     l1145 010C  
                   l1161 013B                     l1137 00FB                     l1225 017A  
                   l1217 0173                     l1209 016D                     l1241 01C2  
                   l1233 01AB                     l1091 0032                     l1163 0140  
                   l1155 0128                     l1147 010F                     l1139 00FD  
                   l1227 017B                     l1219 0174                     l1171 014E  
                   l1243 01C5                     l1235 01B0                     l1093 0037  
                   l1165 0145                     l1157 012E                     l1149 0116  
                   l1229 0094                     l1181 0158                     l1173 014F  
                   l1245 01C9                     l1237 01B3                     l1095 0039  
                   l1087 002B                     l1159 0135                     l1191 015D  
                   l1183 0159                     l1175 0152                     l1247 01CB  
                   l1239 01B9                     l1097 003D                     l1089 002E  
                   l1193 015E                     l1185 015A                     l1177 0156  
                   l1169 014A                     l1249 01CE                     l1099 0042  
                   l1195 015F                     l1187 015B                     l1179 0157  
                   l1197 0163                     l1189 015C                     l1199 0166  
                   _ADIF 0066                     ?_isr 0075                     _T0IF 005A  
                   i1l83 01A2                     _TMR0 0001             _transistores 0071  
                   _main 01AB                     btemp 007E                     start 000E  
                  ??_isr 0076                    ?_main 0075          __end_of___awdiv 0094  
        __end_of___awmod 014A          ___awdiv@divisor 0030                    i1l112 0231  
                  i1l106 0200                    i1l115 0248                    i1l109 023D  
                  i1l711 023B                    i1l707 0232                    i1l715 0224  
                  i1l709 0235                    i1l717 022C                    i1l719 0230  
                  i1l935 023E                    i1l937 0246                    i1l939 0247  
        ___awdiv@counter 0035                    u50_20 0183                    u50_21 0182  
                  u51_20 018C                    u51_21 018B                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    u52_20 0198  
                  u52_21 0197                    u47_20 01DD                    u47_21 01DC  
                  u48_20 01EA                    u48_21 01E9                    u49_20 01F8  
                  u49_21 01F7                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    _setup 014A                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0011  
           __end_of_main 01D7                   ??_main 003C                   _ADRESH 001E  
       ___awdiv@dividend 0032                   ?_setup 0075                   _ANSELH 0189  
                 i1l1031 01E0                   i1l1041 01F8                   i1l1033 01E5  
                 i1l1025 01D7                   i1l1043 01FB                   i1l1035 01EA  
                 i1l1027 01D8                   i1l1051 017D                   i1l1037 01ED  
                 i1l1029 01DD                   i1l1053 0183                   i1l1061 0194  
                 i1l1039 01F2                   i1l1063 0198                   i1l1055 018C  
                 i1l1065 019D                   i1l1057 018F                   i1l1067 01A1  
                 i1l1059 0193         __end_of_display1 023E         __end_of_display2 0232  
       __end_of_display3 0249         __end_of_division 00EF                ??___awdiv 0034  
              ??___awmod 0034         ___awdiv@quotient 0037          ___awmod@divisor 0030  
        ___awmod@counter 0035                   saved_w 007E  __end_of__initialization 0027  
         __pcstackCOMMON 0075             __pidataBANK0 0214            __end_of_setup 017D  
         _OPTION_REGbits 0081                  ??_setup 0030               __pbssBANK0 003D  
             __pmaintext 01AB               __pintentry 0004                ?_display1 0075  
              ?_display2 0075                ?_display3 0075                ?_division 0075  
                ___awdiv 002B                  ___awmod 00EF                  _decenas 0072  
              _ANSELbits 0188                  __ptext1 014A                  __ptext2 0094  
                __ptext3 00EF                  __ptext4 002B                  __ptext5 017D  
                __ptext6 01D7                  __ptext7 023E                  __ptext8 0224  
                __ptext9 0232               _tabla_7seg 0020             __size_of_isr 002E  
       ___awmod@dividend 0032                  _residuo 0070               ??_display1 0075  
             ??_display2 0075               ??_display3 0075     end_of_initialization 0027  
             ??_division 0039                _PORTEbits 0009            ?_multiplexado 0075  
              _TRISAbits 0085           ??_multiplexado 0076      start_initialization 0011  
            __end_of_isr 01AB               init_fetch0 0201              __pdataBANK0 0020  
            __pbssCOMMON 0070                ___latbits 0002            __pcstackBANK0 0030  
      __size_of_display1 000C        __size_of_display2 000E        __size_of_display3 000B  
      __size_of_division 005B                 ?___awdiv 0030                 ?___awmod 0030  
              _dividendo 0074           __size_of_setup 0033        interrupt_function 0004  
               _PIE1bits 008C     __end_of_multiplexado 0201                 _PIR1bits 000C  
             _ADCON0bits 001F               _ADCON1bits 009F         __size_of___awdiv 0069  
       __size_of___awmod 005B                 _centenas 0073                 _display1 0232  
               _display2 0224                 _display3 023E                 _division 0094  
               _contador 003D            __size_of_main 002C                 _temporal 003E  
               _unidades 003F               _INTCONbits 000B                 init_ram0 0205  
               intlevel1 0000    __size_of_multiplexado 002A               _OSCCONbits 008F  
           _multiplexado 01D7  
